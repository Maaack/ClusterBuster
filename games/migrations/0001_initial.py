# Generated by Django 2.1.7 on 2019-03-12 23:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('gamedefinitions', '0001_initial'),
        ('rooms', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('condition_type', models.PositiveSmallIntegerField(choices=[(0, 'Has Value'), (1, 'Boolean'), (2, 'Comparison')], default=0, verbose_name='Condition Operation')),
                ('comparison_type', models.PositiveSmallIntegerField(choices=[(0, '=='), (1, '!='), (2, '>'), (3, '<'), (4, '>='), (5, '<=')], default=0, verbose_name='Comparison Operation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConditionalTransition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('label', models.SlugField(max_length=32, verbose_name='Label')),
                ('boolean_op', models.PositiveSmallIntegerField(choices=[(0, 'OR'), (1, 'AND')], default=0, verbose_name='Boolean Operation')),
                ('conditions', models.ManyToManyField(related_name='conditional_transitions', to='games.Condition')),
                ('from_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='gamedefinitions.State')),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('code', models.SlugField(max_length=16, verbose_name='Code')),
                ('game_definition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gamedefinitions.GameDefinition')),
                ('leader', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='rooms.Player')),
                ('players', models.ManyToManyField(blank=True, related_name='games', to='rooms.Player')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='games', to='rooms.Room')),
                ('teams', models.ManyToManyField(blank=True, related_name='games', to='rooms.Team')),
            ],
            options={
                'verbose_name': 'Game',
                'verbose_name_plural': 'Games',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='MixedValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('integer', models.IntegerField(blank=True, default=None, null=True, verbose_name='Integer')),
                ('string', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='String')),
                ('boolean', models.NullBooleanField(default=None, verbose_name='Boolean')),
                ('float', models.FloatField(blank=True, default=None, null=True, verbose_name='Float')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('key', models.SlugField(max_length=255, verbose_name='Key')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Object ID')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.ContentType')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameters', to='games.Game')),
            ],
        ),
        migrations.CreateModel(
            name='StateMachine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('current_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='gamedefinitions.State')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state_machines', to='games.Game')),
                ('previous_state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='gamedefinitions.State')),
                ('root_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='gamedefinitions.State')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('reason', models.SlugField(max_length=32, verbose_name='Reason')),
                ('from_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transitions_out', to='gamedefinitions.State')),
                ('state_machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transitions', to='games.StateMachine')),
                ('to_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transitions_in', to='gamedefinitions.State')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='conditionaltransition',
            name='state_machine',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conditional_transitions', to='games.StateMachine'),
        ),
        migrations.AddField(
            model_name='conditionaltransition',
            name='to_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='gamedefinitions.State'),
        ),
        migrations.AddField(
            model_name='condition',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conditions', to='games.Game'),
        ),
        migrations.AddField(
            model_name='condition',
            name='parameter_1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='games.Parameter'),
        ),
        migrations.AddField(
            model_name='condition',
            name='parameter_2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='games.Parameter'),
        ),
        migrations.AlterUniqueTogether(
            name='parameter',
            unique_together={('game', 'key')},
        ),
        migrations.AlterUniqueTogether(
            name='conditionaltransition',
            unique_together={('state_machine', 'label', 'from_state', 'to_state')},
        ),
    ]
